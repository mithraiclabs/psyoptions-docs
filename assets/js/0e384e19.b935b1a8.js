"use strict";(self.webpackChunkpsyoptions_docs=self.webpackChunkpsyoptions_docs||[]).push([[671],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return h}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),h=o,m=d["".concat(c,".").concat(h)]||d[h]||u[h]||i;return n?r.createElement(m,a(a({ref:t},p),{},{components:n})):r.createElement(m,a({ref:t},p))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9881:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return a},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return l},default:function(){return u}});var r=n(8782),o=n(1251),i=(n(7294),n(3905)),a={id:"intro",title:"Introduction",sidebar_label:"Introduction",slug:"/"},s=void 0,c={unversionedId:"intro",id:"intro",isDocsHomePage:!1,title:"Introduction",description:"PsyOptions is an American style options protocol built on the Solana blockchain.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/",permalink:"/",editUrl:"https://github.com/mithraiclabs/psyoptions-docs/tree/master/docs/intro.md",tags:[],version:"current",frontMatter:{id:"intro",title:"Introduction",sidebar_label:"Introduction",slug:"/"},sidebar:"someSidebar",next:{title:"Mission",permalink:"/mission"}},l=[{value:"Architecture",id:"architecture",children:[]},{value:"How it works",id:"how-it-works",children:[{value:"Writing an option",id:"writing-an-option",children:[]},{value:"Exercising an option",id:"exercising-an-option",children:[]}]}],p={toc:l};function u(e){var t=e.components,n=(0,o.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"PsyOptions is an American style options protocol built on the Solana blockchain.\nThe principles that have guided the architecture and development of the core protocol are flexibility and composability.\nIt is completely trustless. The core protocol makes no assumptions on how the options should be traded or priced.\nOptions are represented as SPL Tokens, which means they can be traded on any DEX that supports SPL Tokens."),(0,i.kt)("p",null,"V1 supports 100% collateralized, asset settled, covered calls and secured puts."),(0,i.kt)("h2",{id:"architecture"},"Architecture"),(0,i.kt)("p",null,"There are five main parameters that the protocol uses when interacting with options markets."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Underlying asset"),(0,i.kt)("li",{parentName:"ul"},"Quote asset"),(0,i.kt)("li",{parentName:"ul"},"Contract size"),(0,i.kt)("li",{parentName:"ul"},"Strike price"),(0,i.kt)("li",{parentName:"ul"},"Expiration")),(0,i.kt)("p",null,"Any user may initialize a market by supplying these values as arguments.\nFungibility of option SPL Tokens are determined by the uniqueness of these parameters."),(0,i.kt)("h2",{id:"how-it-works"},"How it works"),(0,i.kt)("h3",{id:"writing-an-option"},"Writing an option"),(0,i.kt)("p",null,"To write an option, one must lock the underlying asset in the amount specified by the option market.\nFor a SOL/USDC option with underlying asset size of 100, 100 SOL would be locked in order to mint the option token.\nThe option writer will receive two SPL Tokens.\nOne represents the option, which the user may sell to generate yield.\nThe other represents the written contract (the claim on the underlying asset) and can be exchanged for the underlying asset post expiration."),(0,i.kt)("h3",{id:"exercising-an-option"},"Exercising an option"),(0,i.kt)("p",null,"Holding an option token pre expiration gives the user the ability to exercise by swapping the quote asset for the underlying asset.\nWhether the option is in the money or out of the money, it's completely up to the token holder whether or not to exercise.\nWhen exercising, the exerciser locks ","[strike price * underlying asset size]"," worth of quote asset, burns the option token, and receives the underlying asset."))}u.isMDXComponent=!0}}]);